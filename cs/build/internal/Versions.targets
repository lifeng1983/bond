<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="GenerateAssemblyVersion">
  <!-- Generates assembly version properties.

  Inputs:
  * $(BondVersionNum): optional string of the form "x.y.z" or "x.y.z-tag"
  * $(IntermediateOutputPath): base of where to output the generated files

  Outputs:
  * The Compile item will have a file with the AssemblyVersion and AssemblyFileVersion
    values

  Remarks:

    If $(BondVersionNum) is not set, then a static file with 0.0.0.1 is
    compiled.

    If $(BondVersionNum) is set, then a file is generated with version
    information based on that. A version of x.y.z.100 is used for normal
    releases and x.y.z.0 is used for pre-release versions (with a -tag
    component).
  -->

  <PropertyGroup>
    <_Bond_GeneratedAssemblyInfoPath>$(IntermediateOutputPath)AssemblyInfo_Generated.cs</_Bond_GeneratedAssemblyInfoPath>
    <!-- Create a property for the DevVersions file path OUTSIDE of the
         Choose. Mono's xbuild evaluates Choose differently than MSBuild,
         and using $(MSBuildThisFileDirectory) inside of the Choose ends up
         resolving to the importing project, not the imported project. This
         works around that difference by evaluating
         $(MSBuildThisFileDirectory) outside of the Choose and then
         referring to it inside. -->
    <_DevVersionsPath>$(MSBuildThisFileDirectory)DevVersions.cs</_DevVersionsPath>
  </PropertyGroup>

  <Choose>
    <When Condition=" '$(BondVersionNum)' == '' ">
      <ItemGroup>
        <Compile Include="$(_DevVersionsPath)" />
      </ItemGroup>
    </When>
    <When Condition="$(BondVersionNum.IndexOf(&quot;-&quot;)) &gt; -1">
      <PropertyGroup>
        <_Bond_IsPreReleaseVersion>true</_Bond_IsPreReleaseVersion>
        <_Bond_BaseVersion>$(BondVersionNum.SubString(0, $(BondVersionNum.IndexOf(&quot;-&quot;))))</_Bond_BaseVersion>
        <_Bond_FullVersion>$(_Bond_BaseVersion).0</_Bond_FullVersion>
      </PropertyGroup>
      <ItemGroup>
        <Compile Include="$(_Bond_GeneratedAssemblyInfoPath)" />
      </ItemGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <_Bond_IsPreReleaseVersion>false</_Bond_IsPreReleaseVersion>
        <_Bond_BaseVersion>$(BondVersionNum)</_Bond_BaseVersion>
        <_Bond_FullVersion>$(_Bond_BaseVersion).100</_Bond_FullVersion>
      </PropertyGroup>
      <ItemGroup>
        <Compile Include="$(_Bond_GeneratedAssemblyInfoPath)" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <Target Name="GenerateAssemblyVersion"
          BeforeTargets="CoreCompile"
          Condition=" '$(BondVersionNum)' != '' ">
    <Message Text="Generating assembly info with version $(_Bond_FullVersion) at &quot;$(_Bond_GeneratedAssemblyInfoPath)&quot;" />
    <MakeDir Directories="$(IntermediateOutputPath)"/>
    <WriteLinesToFile
        File="$(_Bond_GeneratedAssemblyInfoPath)"
        Lines="// &lt;autogenerated /&gt;;
               [assembly: System.Reflection.AssemblyVersion(&quot;$(_Bond_FullVersion)&quot;)];
               [assembly: System.Reflection.AssemblyFileVersion(&quot;$(_Bond_FullVersion)&quot;)];
               [assembly: System.Reflection.AssemblyInformationalVersion(&quot;$(_Bond_FullVersion)&quot;)]"
        Overwrite="true"
        Encoding="ASCII" />
  </Target>
</Project>
